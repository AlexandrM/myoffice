@using ASE.Code.MVC;

@{
    DateTime dtFrom = DateTime.Now.AddMonths(-1);
    if (ViewData["dtfrom"] != null)
    {
        dtFrom = DateTime.Parse(ViewData["dtfrom"].ToString());
    }
    DateTime dtTo = DateTime.Now;
    if (ViewData["dtTo"] != null)
    {
        dtTo = DateTime.Parse(ViewData["dtTo"].ToString());
    }
}

<div id="options">
    <h1>
        @R.R.Report 
        "@R.R.CurrentRests"
        @R.R.on
        @dtTo.ToShortDateString()
    </h1>
    
</div>

<div class="well row">
    <div class="form-inline">
        <div class="form-group">
            <label style="display: inline-block">@R.R.From</label>
        </div>
        <div class="form-group">
            @Html.TextBox("dtFrom", dtFrom.ToShortDateString(), null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>@R.R.To</label>
        </div>
        <div class="form-group">
            @Html.TextBox("dtTo", dtTo.ToShortDateString(), null, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <a href="#" class="btn btn-success" onclick="@(String.Format("Refresh{0}('{0}')", ViewData["name"]))">@R.R.Refersh</a>
        </div>
    </div>
</div>

<div id="report">
    @{
        DB db = new DB();
        GlobalDAL dal = new GlobalDAL();
        var q = from items in db.Motions
                where items.Account.Owner.Id == dal.CurrentOwner.Id
                group items by new 
                    {
                        Account = items.Account, 
                        Currency = items.Account.Currency,
                        
                    } into gAccount
                orderby gAccount.Key.Account.Name
                select new
                {
                    SumM = gAccount.Sum(x => x.SumM),
                    SumP = gAccount.Sum(x => x.SumP),
                    Group = gAccount.Key,
                    
                };

        var list = q.ToList();

        Currency primary = db.Currencies.FirstOrDefault(x => x.Owner.Id == dal.CurrentOwner.Id && x.Primary);
    }

    <table class="table table-striped table-hover" style="width: auto"><tbody>
        @{
            List<dynamic> data = new List<dynamic>();
            
            //new System.Web.Script.Serialization.JavaScriptSerializer
            decimal total = 0;
            foreach(var item in list)
            {
                CurrencyRate cr = item.Group.Currency.Rates.Where(x => x.DateTime <=  dtTo).OrderByDescending(x => x.DateTime).Take(1).FirstOrDefault();
                decimal rate = 1;
                if (cr != null)
                {
                    rate = cr.Rate / cr.Multiplicity;
                }
                decimal sum = (item.SumP - item.SumM) * rate;
                total = total + sum;
                
                data.Add(new { label = item.Group.Account.Name, data = sum });
                <tr>
                    <td>
                        <h5>@item.Group.Account.Name</h5>
                    </td>
                    <td>
                        <h4>@(String.Format("{0:0.00}", item.SumP - item.SumM))</h4>
                    </td>
                    <td>
                        <h5>@item.Group.Currency.ShortName</h5>
                    </td>
                    <td>
                        <h4>@(String.Format("{0:0.00}", sum))</h4>
                    </td>
                    <td>
                        <h5>@primary.ShortName</h5>
                    </td>
                </tr>
            }
        }
            <tr>
                <td colspan="5" style="text-align: right">
                    <h4>@R.R.Total</h4>
                    <h3>@String.Format("{0:0.00}", @total)</h3>
                    <h5>@primary.ShortName</h5>
                </td>
            </tr>
    </tbody></table>
</div>

<div id="graph" style="display:inline-block">

</div>

<script>
    var data = @(Html.Raw(Html.JsonSerialize(data)));

    var size = screen.width * 0.40;
    if (size > 500)
        size = 500;
    $("#graph").css("width", size);
    $("#graph").css("height", size);

    $.plot($("#graph"), data,
       {
           series: {
               pie: {
                   show: true
               }
           }
       });

    @(String.Format("function Refresh{0}(name)", ViewData["name"]))
    {
        var param = new Object();
        param['dtFrom'] = $("#dtFrom")[0].value;
        param['dtTo'] = $("#dtTo")[0].value;

        LoadReport(name, param);
    }
</script>