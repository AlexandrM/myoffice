<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessAllowed" xml:space="preserve">
    <value>Access is granted</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add On</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>Add category</value>
  </data>
  <data name="AddDayReport" xml:space="preserve">
    <value>Add daily report</value>
  </data>
  <data name="AddFile" xml:space="preserve">
    <value>Add file</value>
  </data>
  <data name="AddPayment" xml:space="preserve">
    <value>Add payment</value>
  </data>
  <data name="AddProject" xml:space="preserve">
    <value>Add Project</value>
  </data>
  <data name="AddRecord" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="AllowAccess" xml:space="preserve">
    <value>Provide access</value>
  </data>
  <data name="AllProjects" xml:space="preserve">
    <value>All projects</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Applications" xml:space="preserve">
    <value>Apps</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>My office</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved by</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>To Top</value>
  </data>
  <data name="ByComma" xml:space="preserve">
    <value>separated by commas</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category name</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="CompareAttribute" xml:space="preserve">
    <value>{0} and {1} not equal.</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to delete</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfirmResetPassword" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConnectionString" xml:space="preserve">
    <value>Connection String</value>
  </data>
  <data name="Currencies" xml:space="preserve">
    <value>Currencies</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="CurrencyRate" xml:space="preserve">
    <value>Course</value>
  </data>
  <data name="CurrencyRates" xml:space="preserve">
    <value>Rate of exchange</value>
  </data>
  <data name="CurrencyType" xml:space="preserve">
    <value>Currency type</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="CustomerDebt" xml:space="preserve">
    <value>Debts client</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="CustomersDebt" xml:space="preserve">
    <value>Receivable from customers</value>
  </data>
  <data name="DataBaseId" xml:space="preserve">
    <value>Code base danyh</value>
  </data>
  <data name="Databases" xml:space="preserve">
    <value>Databases</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateFrom" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>Date and time</value>
  </data>
  <data name="DateTo" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="DayReport" xml:space="preserve">
    <value>Day report</value>
  </data>
  <data name="Debt" xml:space="preserve">
    <value>Debt</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Deleting" xml:space="preserve">
    <value>Removal</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Amend</value>
  </data>
  <data name="EditMemberDayReport" xml:space="preserve">
    <value>Editing day report</value>
  </data>
  <data name="EditMemberPayment" xml:space="preserve">
    <value>Changing payment</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Finance" xml:space="preserve">
    <value>Finances</value>
  </data>
  <data name="Finance1" xml:space="preserve">
    <value>Accounting for personal funds in the context of articles on various accounts and in different currencies</value>
  </data>
  <data name="Finance2" xml:space="preserve">
    <value>Reports on balances , income and expenditure</value>
  </data>
  <data name="FinanceManager" xml:space="preserve">
    <value>Finances</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>for</value>
  </data>
  <data name="ForCustomer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="ForCustomer1" xml:space="preserve">
    <value>Setting targets executor</value>
  </data>
  <data name="ForCustomer2" xml:space="preserve">
    <value>Reporting artist in time and in money terms</value>
  </data>
  <data name="ForFreelancer" xml:space="preserve">
    <value>Freelancer</value>
  </data>
  <data name="ForFreelancer1" xml:space="preserve">
    <value>Maintain a list of customers and the financial conditions of work</value>
  </data>
  <data name="ForFreelancer2" xml:space="preserve">
    <value>Statement of the problem by the customer</value>
  </data>
  <data name="ForFreelancer3" xml:space="preserve">
    <value>Accounting for time-consuming</value>
  </data>
  <data name="ForFreelancer4" xml:space="preserve">
    <value>Accounting and reporting of work performed</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>Hstory</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="HoursS" xml:space="preserve">
    <value>h.</value>
  </data>
  <data name="IAm" xml:space="preserve">
    <value>I`am</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Implementer" xml:space="preserve">
    <value>Performer</value>
  </data>
  <data name="ImplementerDebt" xml:space="preserve">
    <value>Amounts owed to performers</value>
  </data>
  <data name="Implementers" xml:space="preserve">
    <value>Implementers</value>
  </data>
  <data name="IndexTopText" xml:space="preserve">
    <value>Project management and financial accounting of projects , based on their personal funds.</value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>In progress</value>
  </data>
  <data name="Invalidtoken" xml:space="preserve">
    <value>Incorrect code</value>
  </data>
  <data name="InvalidUsernameOrPassword" xml:space="preserve">
    <value>Incorrect email or password.</value>
  </data>
  <data name="Journal" xml:space="preserve">
    <value>Journal</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Limitation" xml:space="preserve">
    <value>Limitation</value>
  </data>
  <data name="LocalAccountLogin" xml:space="preserve">
    <value>Log with local account</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Logoff</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="MemberDayReports" xml:space="preserve">
    <value>Daily reports</value>
  </data>
  <data name="MemberDebt" xml:space="preserve">
    <value>Debts customers</value>
  </data>
  <data name="MemberPayment" xml:space="preserve">
    <value>Customer payment</value>
  </data>
  <data name="MemberRates" xml:space="preserve">
    <value>Rates</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="MemberType" xml:space="preserve">
    <value>Member type</value>
  </data>
  <data name="MenuHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MenuTimeLogger" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="MinitesS" xml:space="preserve">
    <value>m.</value>
  </data>
  <data name="MinLength" xml:space="preserve">
    <value>Please enter at least {0} characters</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Motions" xml:space="preserve">
    <value>Motions</value>
  </data>
  <data name="MoveTo" xml:space="preserve">
    <value>Move to</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="MyProjects" xml:space="preserve">
    <value>My projects</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NewCategory" xml:space="preserve">
    <value>New category</value>
  </data>
  <data name="NewCurrency" xml:space="preserve">
    <value>New currency</value>
  </data>
  <data name="NewCustomer" xml:space="preserve">
    <value>New customer</value>
  </data>
  <data name="NewCustomerDayReport" xml:space="preserve">
    <value>New day report</value>
  </data>
  <data name="NewCustomerPayment" xml:space="preserve">
    <value>New payment</value>
  </data>
  <data name="NewImplementer" xml:space="preserve">
    <value>New implementer</value>
  </data>
  <data name="NewMember" xml:space="preserve">
    <value>New member</value>
  </data>
  <data name="NewMemberDayReport" xml:space="preserve">
    <value>New day report</value>
  </data>
  <data name="NewMemberPayment" xml:space="preserve">
    <value>New payment</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="NewProject" xml:space="preserve">
    <value>New project</value>
  </data>
  <data name="NewRate" xml:space="preserve">
    <value>New rate</value>
  </data>
  <data name="NewTask" xml:space="preserve">
    <value>New task</value>
  </data>
  <data name="NoLocalAccount" xml:space="preserve">
    <value>if now local account.</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="OnDate" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="OnEnd" xml:space="preserve">
    <value>On end</value>
  </data>
  <data name="OnStart" xml:space="preserve">
    <value>On start</value>
  </data>
  <data name="Params" xml:space="preserve">
    <value>Params</value>
  </data>
  <data name="Partner" xml:space="preserve">
    <value>Partner</value>
  </data>
  <data name="Partners" xml:space="preserve">
    <value>Partners</value>
  </data>
  <data name="PasswordConfirmationError" xml:space="preserve">
    <value>Пароль и подтверждение не совпадают.</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="Period" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="PeriodFrom" xml:space="preserve">
    <value>Period from:</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="ProjectTaskStateApproved" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="ProjectTaskStateComplete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="ProjectTaskStateInProgress" xml:space="preserve">
    <value>In progress</value>
  </data>
  <data name="ProjectTaskStateNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="QDeleteTimeLoggerSettingWorkStation" xml:space="preserve">
    <value>Delete workstations {0}?</value>
  </data>
  <data name="QuickRecords" xml:space="preserve">
    <value>Quick records</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="Rates" xml:space="preserve">
    <value>Rates</value>
  </data>
  <data name="RateSettedAs" xml:space="preserve">
    <value>Rate setted </value>
  </data>
  <data name="ReallyAddUserWithEmail" xml:space="preserve">
    <value>Add user with e-mail</value>
  </data>
  <data name="References" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RequiredFormat" xml:space="preserve">
    <value>Field '{0}' is required.</value>
  </data>
  <data name="ResetPasswordCode" xml:space="preserve">
    <value>Password restore code</value>
  </data>
  <data name="RestorePassword" xml:space="preserve">
    <value>Restore password</value>
  </data>
  <data name="RestorePasswordCode" xml:space="preserve">
    <value>Password restore code</value>
  </data>
  <data name="RestoringPassword" xml:space="preserve">
    <value>Restore password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SecondsS" xml:space="preserve">
    <value>s.</value>
  </data>
  <data name="Sections" xml:space="preserve">
    <value>Sections</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Selecta category</value>
  </data>
  <data name="SendDebtInfo" xml:space="preserve">
    <value>Send report to</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShortName" xml:space="preserve">
    <value>Short</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="String2" xml:space="preserve">
    <value />
  </data>
  <data name="Summ" xml:space="preserve">
    <value>Summ</value>
  </data>
  <data name="SummaryInformation" xml:space="preserve">
    <value>Summary information</value>
  </data>
  <data name="SummPay" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="Summs" xml:space="preserve">
    <value>Summs</value>
  </data>
  <data name="SummWork" xml:space="preserve">
    <value>Work</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="TaskCount" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="TimeLoggerSettingDataBase" xml:space="preserve">
    <value>TimeLogger database</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to:</value>
  </data>
  <data name="ToIndex" xml:space="preserve">
    <value>To index</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WorkStation" xml:space="preserve">
    <value>Workstation</value>
  </data>
  <data name="WorkStationId" xml:space="preserve">
    <value>Workstation id</value>
  </data>
  <data name="ChangingPassword" xml:space="preserve">
    <value>Passwrod changing</value>
  </data>
  <data name="AddTask" xml:space="preserve">
    <value>Add task</value>
  </data>
  <data name="NotAccepted" xml:space="preserve">
    <value>Not accepted</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="ProjectStateApproved" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="ProjectStateComplete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="ProjectStateInProgress" xml:space="preserve">
    <value>In progress</value>
  </data>
  <data name="ProjectStateNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="MyCurrency" xml:space="preserve">
    <value>My currency</value>
  </data>
  <data name="LoginProviderNoEmail" xml:space="preserve">
    <value>email address not available, register please</value>
  </data>
  <data name="IncorrectCAPTCHA" xml:space="preserve">
    <value>Incorrect CAPTCHA code!</value>
  </data>
  <data name="AssignPasswordCode" xml:space="preserve">
    <value>Set password code</value>
  </data>
  <data name="AssignPassword" xml:space="preserve">
    <value>Set password</value>
  </data>
  <data name="UserAlreadyExists" xml:space="preserve">
    <value>User already exists</value>
  </data>
  <data name="Associcate" xml:space="preserve">
    <value>Associcate</value>
  </data>
  <data name="Diasssocicate" xml:space="preserve">
    <value>Diasssocicate</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ProjectArchive" xml:space="preserve">
    <value>Project archive</value>
  </data>
  <data name="ProjectRestrore" xml:space="preserve">
    <value>Restrore</value>
  </data>
</root>